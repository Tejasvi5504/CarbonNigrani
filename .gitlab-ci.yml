stages:
  - install
  - build
  - test
  - deploy

variables:
  NODE_ENV: development  # Ensure NODE_ENV is not set to production during install

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .next/cache
    - node_modules/

services:
  - name: postgres:13
    alias: postgres
    variables:
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB: test_db
  - name: mongo:6
    alias: mongo
    variables:
      MONGO_INITDB_ROOT_USERNAME: test_user
      MONGO_INITDB_ROOT_PASSWORD: test_password

install_dependencies:
  stage: install
  image: node:18-alpine
  script:
    - npm install --include=dev  # Ensure devDependencies are installed
    - ls -la node_modules
    - ls -la node_modules/tailwindcss
  artifacts:
    paths:
      - node_modules/

build_project:
  stage: build
  image: node:18-alpine
  script:
    - npm run build
  artifacts:
    paths:
      - .next/

test_application:
  stage: test
  image: node:18-alpine
  script:
    - echo "Running tests..."
    - npm run test

deploy:
  stage: deploy
  image: node:18-alpine
  script:
    - echo "Deploying frontend..."
    # Add deployment logic here
